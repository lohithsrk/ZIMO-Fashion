{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  yield console.log('i am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/Lohith/Documents/Web_Development/Zimo-fashion/src/redux/shop/shop.sagas.js"],"names":["takeEvery","shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAD,EAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACX,uBAAuB,CAACU,cAAD,CAAxB,CAAR;AACD,GALH,EAMGE,KANH,CAMUC,KAAD,IAAWF,QAAQ,CAACV,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAN5B;AAOD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CACbC,eAAe,CAACmB,uBADH,EAEbd,oBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\nimport shopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nexport function* fetchCollectionAsync() {\r\n  yield console.log('i am fired');\r\n  const collectionRef = firestore.collection('collections');\r\n  collectionRef\r\n    .get()\r\n    .then((snapshot) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    })\r\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    shopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}