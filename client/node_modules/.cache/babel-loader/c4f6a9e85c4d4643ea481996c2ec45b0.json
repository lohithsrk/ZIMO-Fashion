{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  yield console.log('i am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n    yield put(fetchCollectionsStart);\n  } catch (error) {} // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/Lohith/Documents/Web_Development/Zimo-fashion/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionAsync","console","log","collectionRef","collection","snapShot","get","collectionMap","fetchCollectionsStart","error","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAG;AACH,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMd,IAAI,CAACI,+BAAD,EAAkCQ,QAAlC,CAAhC;AACA,UAAMX,GAAG,CAACc,qBAAD,CAAT;AACD,GALC,CAKA,OAAMC,KAAN,EAAa,CAEd,CAVuC,CAWtC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUD,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CACbG,eAAe,CAACe,uBADH,EAEbV,oBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\nimport shopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nexport function* fetchCollectionAsync() {\r\n  yield console.log('i am fired');\r\n\r\n  try{\r\n  const collectionRef = firestore.collection('collections');\r\n  const snapShot = yield collectionRef.get()\r\n  const collectionMap = yield call(convertCollectionsSnapshotToMap, snapShot)\r\n  yield put(fetchCollectionsStart)\r\n} catch(error) {\r\n\r\n}\r\n  // collectionRef\r\n  //   .get()\r\n  //   .then((snapshot) => {\r\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\r\n  //   })\r\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    shopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}