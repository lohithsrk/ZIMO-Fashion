{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/Lohith/Documents/Web_Development/Zimo-fashion/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapShot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionAsync"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BI,+BAD+B,EAE/BM,QAF+B,CAAjC;AAIA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CACbG,eAAe,CAACc,uBADH,EAEbC,oBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\nimport shopActionTypes from './shop.types';\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from '../../firebase/firebase.utils';\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure\r\n} from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapShot = yield collectionRef.get();\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      snapShot\r\n    );\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionsFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    shopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}