{"version":3,"sources":["components/stripe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["StripeCheckoutButton","_ref","price","priceForStripe","react_default","a","createElement","main_default","label","name","billingAddress","shippingAddress","image","Logo","description","concat","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","CheckoutItemContainer","styled","div","_templateObject","Object","taggedTemplateLiteral","ImageContainer","_templateObject2","TextContainer","span","_templateObject3","QuantityContainer","_templateObject4","RemoveButtonContainer","_templateObject5","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","imageUrl","quantity","src","alt","onClick","CheckoutPageContainer","checkout_styles_templateObject","CheckoutHeaderContainer","checkout_styles_templateObject2","HeaderBlockContainer","checkout_styles_templateObject3","TotalContainer","checkout_styles_templateObject4","WarningContainer","checkout_styles_templateObject5","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","checkout_item_component","key","id","stripe_button_component"],"mappings":"qMA8CeA,EAzCc,SAAHC,GAAkB,IAAZC,EAAKD,EAALC,MACzBC,EAAyB,IAARD,EAwBvB,OACCE,EAAAC,EAAAC,cAACC,EAAAF,EAAc,CACdG,MAAM,UACNC,KAAK,oBACLC,gBAAc,EACdC,iBAAe,EACfC,MAAOC,IACPC,YAAW,kBAAAC,OAAoBb,GAC/Bc,OAAQb,EACRc,WAAW,UACXC,MA9Bc,SAACA,GAChBC,YAAM,CACLC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACLN,OAAQb,EACRe,MAAOA,KAGPK,KAAK,SAACC,GACNC,MAAM,uBAENC,MAAM,SAACC,GACPC,QAAQC,IAAI,kBAAmBF,GAC/BF,MACC,+FAgBFK,UAjCD,wICNWC,EAAwBC,IAAOC,IAAGC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,wKAUlCE,EAAiBL,IAAOC,IAAGK,MAAAH,OAAAC,EAAA,EAAAD,CAAA,sGAU3BI,EAAgBP,IAAOQ,KAAIC,MAAAN,OAAAC,EAAA,EAAAD,CAAA,yBAI3BO,EAAoBV,YAAOO,EAAPP,CAAqBW,MAAAR,OAAAC,EAAA,EAAAD,CAAA,wGAYzCS,EAAwBZ,IAAOC,IAAGY,MAAAV,OAAAC,EAAA,EAAAD,CAAA,qDCMhCW,cACb,KAPyB,SAAAC,GAAQ,MAAK,CACtCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,OAG3BH,CA3BM,SAAH7C,GAAqD,IAA/CoD,EAAQpD,EAARoD,SAAUL,EAAS/C,EAAT+C,UAAWG,EAAOlD,EAAPkD,QAASC,EAAUnD,EAAVmD,WAC5C3C,EAAoC4C,EAApC5C,KAAM6C,EAA8BD,EAA9BC,SAAUpD,EAAoBmD,EAApBnD,MAAOqD,EAAaF,EAAbE,SAC/B,OACEnD,EAAAC,EAAAC,cAACyB,EAAqB,KACpB3B,EAAAC,EAAAC,cAAC+B,EAAc,KACbjC,EAAAC,EAAAC,cAAA,OAAKkD,IAAKF,EAAUG,IAAI,UAE1BrD,EAAAC,EAAAC,cAACiC,EAAa,KAAE9B,GAChBL,EAAAC,EAAAC,cAACoC,EAAiB,KAChBtC,EAAAC,EAAAC,cAAA,OAAKoD,QAAS,kBAAMN,EAAWC,KAAW,UAC1CjD,EAAAC,EAAAC,cAAA,YAAOiD,GACPnD,EAAAC,EAAAC,cAAA,OAAKoD,QAAS,kBAAMP,EAAQE,KAAW,WAEzCjD,EAAAC,EAAAC,cAACiC,EAAa,KAAErC,GAChBE,EAAAC,EAAAC,cAACsC,EAAqB,CAACc,QAAS,kBAAMV,EAAUK,KAAW,qBC7BpDM,EAAwB3B,IAAOC,IAAG2B,MAAAzB,OAAAC,EAAA,EAAAD,CAAA,+QAkBlC0B,EAA0B7B,IAAOC,IAAG6B,MAAA3B,OAAAC,EAAA,EAAAD,CAAA,sIAQpC4B,EAAuB/B,IAAOC,IAAG+B,MAAA7B,OAAAC,EAAA,EAAAD,CAAA,kGASjC8B,EAAiBjC,IAAOC,IAAGiC,MAAA/B,OAAAC,EAAA,EAAAD,CAAA,yEAM3BgC,EAAmBnC,IAAOC,IAAGmC,MAAAjC,OAAAC,EAAA,EAAAD,CAAA,yFCSpCkC,EAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,MAAOC,MAGM5B,sBAAQuB,EAARvB,CArCM,SAAH7C,GAAA,IAAMsE,EAAStE,EAATsE,UAAWE,EAAKxE,EAALwE,MAAK,OACtCrE,EAAAC,EAAAC,cAACqD,EAAqB,KACpBvD,EAAAC,EAAAC,cAACuD,EAAuB,KACtBzD,EAAAC,EAAAC,cAACyD,EAAoB,KACnB3D,EAAAC,EAAAC,cAAA,YAAM,YAERF,EAAAC,EAAAC,cAACyD,EAAoB,KACnB3D,EAAAC,EAAAC,cAAA,YAAM,gBAERF,EAAAC,EAAAC,cAACyD,EAAoB,KACnB3D,EAAAC,EAAAC,cAAA,YAAM,aAERF,EAAAC,EAAAC,cAACyD,EAAoB,KACnB3D,EAAAC,EAAAC,cAAA,YAAM,UAERF,EAAAC,EAAAC,cAACyD,EAAoB,KACnB3D,EAAAC,EAAAC,cAAA,YAAM,YAGTiE,EAAUI,IAAI,SAAAtB,GAAQ,OACrBjD,EAAAC,EAAAC,cAACsE,EAAY,CAACC,IAAKxB,EAASyB,GAAIzB,SAAUA,MAE5CjD,EAAAC,EAAAC,cAAC2D,EAAc,KAAC,WAASQ,GACzBrE,EAAAC,EAAAC,cAAC6D,EAAgB,KAAC,2DAEhB/D,EAAAC,EAAAC,cAAA,WAAM,+CAGRF,EAAAC,EAAAC,cAACyE,EAAoB,CAAC7E,MAAOuE","file":"static/js/4.022490ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport Logo from '../../assets/Zimo.png';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n\tconst priceForStripe = price * 100;\r\n\tconst publishableKey =\r\n\t\t'pk_test_51J9qWsSJjZfLRrCKTmDY7YwklKmeudG6eP0IbMBewheR9HT3a6TBNM3GFmJX5XIofUNNbrUCYuWAVCnIQgcWaMua00a16VjDYC';\r\n\r\n\tconst onToken = (token) => {\r\n\t\taxios({\r\n\t\t\turl: 'payment',\r\n\t\t\tmethod: 'post',\r\n\t\t\tdata: {\r\n\t\t\t\tamount: priceForStripe,\r\n\t\t\t\ttoken: token\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\talert('succesful payment');\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log('Payment Error: ', error);\r\n\t\t\t\talert(\r\n\t\t\t\t\t'There was an issue with your payment! Please make sure you use the provided credit card.'\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StripeCheckout\r\n\t\t\tlabel='Pay Now'\r\n\t\t\tname='ZIMO-Fashion Ltd.'\r\n\t\t\tbillingAddress\r\n\t\t\tshippingAddress\r\n\t\t\timage={Logo}\r\n\t\t\tdescription={`Your total is $${price}`}\r\n\t\t\tamount={priceForStripe}\r\n\t\t\tpanelLabel='Pay Now'\r\n\t\t\ttoken={onToken}\r\n\t\t\tstripeKey={publishableKey}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default StripeCheckoutButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n\r\n  span {\r\n    margin: 0 10px;\r\n  }\r\n\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  clearItemFromCart,\r\n  addItem,\r\n  removeItem\r\n} from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CheckoutItemContainer,\r\n  ImageContainer,\r\n  TextContainer,\r\n  QuantityContainer,\r\n  RemoveButtonContainer\r\n} from './checkout-item.styles';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  return (\r\n    <CheckoutItemContainer>\r\n      <ImageContainer>\r\n        <img src={imageUrl} alt='item' />\r\n      </ImageContainer>\r\n      <TextContainer>{name}</TextContainer>\r\n      <QuantityContainer>\r\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n        <span>{quantity}</span>\r\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\r\n      </QuantityContainer>\r\n      <TextContainer>{price}</TextContainer>\r\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\r\n        &#10005;\r\n      </RemoveButtonContainer>\r\n    </CheckoutItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearItem: item => dispatch(clearItemFromCart(item)),\r\n  addItem: item => dispatch(addItem(item)),\r\n  removeItem: item => dispatch(removeItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CheckoutItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n\r\n  &:last-child {\r\n    width: 15%;\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal\r\n} from '../../redux/cart/cart.selectors';\r\n\r\nimport {\r\n  CheckoutPageContainer,\r\n  CheckoutHeaderContainer,\r\n  HeaderBlockContainer,\r\n  TotalContainer,\r\n  WarningContainer\r\n} from './checkout.styles';\r\n\r\nconst CheckoutPage = ({ cartItems, total }) => (\r\n  <CheckoutPageContainer>\r\n    <CheckoutHeaderContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Product</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Description</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Quantity</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Price</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Remove</span>\r\n      </HeaderBlockContainer>\r\n    </CheckoutHeaderContainer>\r\n    {cartItems.map(cartItem => (\r\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n    ))}\r\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\r\n    <WarningContainer>\r\n      *Please use the following test credit card for payments*\r\n      <br />\r\n      4242 4242 4242 4242 - Exp: 01/22 - CVV: 123\r\n    </WarningContainer>\r\n    <StripeCheckoutButton price={total} />\r\n  </CheckoutPageContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n"],"sourceRoot":""}