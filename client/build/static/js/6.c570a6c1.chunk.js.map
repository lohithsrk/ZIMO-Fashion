{"version":3,"sources":["components/with-spinner/with-spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js"],"names":["SpinnerOverlay","styled","div","_templateObject","Object","taggedTemplateLiteral","SpinnerContainer","_templateObject2","WithSpinner","WrappedComponent","_ref","isLoading","otherProps","objectWithoutProperties","react_default","a","createElement","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","_templateObject3","imageUrl","concat","CollectionFooterContainer","_templateObject4","NameContainer","span","_templateObject5","PriceContainer","_templateObject6","connect","dispatch","addItem","item","name","price","className","onClick","inverted","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","displayName","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","collection_item_component","key","id","mapStateToProps","createStructuredSelector","selectIsCollectionsLoaded","compose","CollectionPage","__webpack_require__","d","__webpack_exports__","selectCollectionsForPreview","selectIsCollectionFetching","reselect__WEBPACK_IMPORTED_MODULE_0__","selectShop","shop","selectCollections","createSelector","collections","keys","collectionUrlParam","isFetching"],"mappings":"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","file":"static/js/6.c570a6c1.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\r\n\r\nconst WithSpinner = WrappedComponent => {\r\n  const Spinner = ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n      <SpinnerOverlay>\r\n        <SpinnerContainer />\r\n      </SpinnerOverlay>\r\n    ) : (\r\n      <WrappedComponent {...otherProps} />\r\n    );\r\n  };\r\n  return Spinner;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CollectionItem);\r\n","  \r\nimport styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n\r\nexport const CollectionItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n  & > div {\r\n    margin-bottom: 30px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n\r\nCollectionItemsContainer.displayName = 'CollectionItemsContainer';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer\r\n} from './collection.styles';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  const { title, items } = collection;\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{title}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionPage from './collection.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);\r\n"],"sourceRoot":""}