{"version":3,"sources":["components/with-spinner/with-spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js"],"names":["SpinnerOverlay","styled","div","_templateObject","Object","taggedTemplateLiteral","SpinnerContainer","_templateObject2","WithSpinner","WrappedComponent","_ref","isLoading","otherProps","objectWithoutProperties","react_default","a","createElement","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","_templateObject3","imageUrl","concat","CollectionFooterContainer","_templateObject4","NameContainer","span","_templateObject5","PriceContainer","_templateObject6","connect","dispatch","addItem","item","name","price","className","onClick","inverted","CollectionPreviewContainer","TitleContainer","h1","displayName","PreviewContainer","withRouter","title","items","history","match","routeName","push","path","toUpperCase","filter","idx","map","collection_item_component","key","id","CollectionsOverviewContainer","collections_overview_styles_templateObject","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","_ref2","otherCollectionProps","collection_preview_component","assign","selectIsCollectionFetching","compose","CollectionsOverview","__webpack_require__","d","__webpack_exports__","selectCollection","selectIsCollectionsLoaded","reselect__WEBPACK_IMPORTED_MODULE_0__","selectShop","state","shop","selectCollections","createSelector","keys","collectionUrlParam","isFetching"],"mappings":"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","file":"static/js/5.b2e8924f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\r\n\r\nconst WithSpinner = WrappedComponent => {\r\n  const Spinner = ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n      <SpinnerOverlay>\r\n        <SpinnerContainer />\r\n      </SpinnerOverlay>\r\n    ) : (\r\n      <WrappedComponent {...otherProps} />\r\n    );\r\n  };\r\n  return Spinner;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CollectionItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nTitleContainer.displayName = 'TitleContainer';\r\n\r\nexport const PreviewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\n\r\nimport {\r\n  CollectionPreviewContainer,\r\n  TitleContainer,\r\n  PreviewContainer\r\n} from './collection-preview.styles';\r\n\r\nconst CollectionPreview = ({ title, items, history, match, routeName }) => (\r\n  <CollectionPreviewContainer>\r\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\r\n      {title.toUpperCase()}\r\n    </TitleContainer>\r\n    <PreviewContainer>\r\n      {items\r\n        .filter((item, idx) => idx < 4)\r\n        .map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n    </PreviewContainer>\r\n  </CollectionPreviewContainer>\r\n);\r\n\r\nexport default withRouter(CollectionPreview);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionsOverviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\n\r\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\r\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\r\n\r\nconst CollectionsOverview = ({ collections }) => (\r\n  <CollectionsOverviewContainer>\r\n    {collections.map(({ id, ...otherCollectionProps }) => (\r\n      <CollectionPreview key={id} {...otherCollectionProps} />\r\n    ))}\r\n  </CollectionsOverviewContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  collections: selectCollectionsForPreview\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\n\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionsOverview from './collections-overview.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionFetching\r\n});\r\n\r\nconst CollectionsOverviewContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);\r\n"],"sourceRoot":""}